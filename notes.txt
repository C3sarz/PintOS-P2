==============================
    CIS 520 S21 - Project 2
	   ---
==============================

==== Observations ====

Jack:

../../userprog/syscall.c: In function ‘sys_read’:
../../userprog/syscall.c:346:18: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   uint8_t *buf = (uint8_t) buffer;
                  ^
../../userprog/syscall.c:346:18: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
../../userprog/syscall.c:356:30: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
  struct file *file_pointer = find_file(fd);
                              ^~~~~~~~~
../../userprog/syscall.c: In function ‘sys_tell’:
../../userprog/syscall.c:477:134: warning: passing argument 1 of ‘list_next’ from incompatible pointer type [-Wincompatible-pointer-types]
 _current()->open_files); iterator != list_end(&thread_current()->open_files); iterator = list_next(&thread_current()->open_files))
                                                                                                    ^
In file included from ../../userprog/syscall.c:2:0:
../../lib/kernel/list.h:129:19: note: expected ‘struct list_elem *’ but argument is of type ‘struct list *’
 struct list_elem *list_next (struct list_elem *);                   ^~~~~~~~~


Illegal memory accesses:
	-How do we release memory and pages after crashing the process??

-Buffer user memory
	- We should probably verify if the whole length of the given buffers are valid.

==== Modified files ====

*-process.c:

	-Modified setup_stack()
	-implementing passing arguments
	-modified load() to acomodate args
	-added argument passing in setup_stack(). Functionality probably won't look but good layout

*-process.h:
	
	-Added arguments struct
	-function prototypes

*-syscall.c:
	-validate pointer function
	-get_word function
	-added file lock
	-functional syscall handler
	-sys_halt function
	-sys_open
	-sys_close
	-sys_filesize
	-sys_exit partially (no children functionality)
	-sys_tell completed

*-syscall.h:	
	-added function prototypes

*-thread.c
	-initialized new properties

*-thread.h
	-added children list property
	-added open_files list property
	-added parent thread property
	-added fd_list list property to represent file descriptors of thread
	-added current_fd property to represent current fd(may not need)?

*-file.h
	-added new open_file_elem struct.
